{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "misc": { "apps_list": ["McAfee Advanced Threat Defense (ATD)", "McAfee OpenDXL", "Maxmind", "SMTP", "Passivetotal", "Servicenow"] },
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "Originally written as an example playbook for BlackHat 2017, this playbook investigates a potential phishing email with a suspicious attachment. Execution starts when a suspicious email with an attachment is forwarded to an inbox which Phantom is polling. McAfee Advanced Threat Defense is used to do static and dynamic analysis on any attachments to the email. If the attachment(s) appear malicious, any IP addresses identified during the ATD detonation are used to do geolocation and IP address reputation, further enriching the data in the original container. The ATD detonation also records the hashes of files that are created or touched. McAfee Active Response is used to search within the enterprise for those hashes, and if there are any matches they are shared on the OpenDXL message fabric.",
            "joint": {
                "cells": [
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all detals of actions \n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "ip reputation, opendxl push hash, create ticket, send email to analyst",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ca5dea79-2cb4-45a2-895d-2747f5110ba1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 382,
                        "line_start": 369,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1620,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'decision_1' block\n    decision_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f95e4245-be5f-4265-9155-80c9cfe65678",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 17,
                        "line_start": 9,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 3
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b31157e3-3d17-44ff-a0d2-cff723bc9165",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c8b616f2-14c1-41f3-a386-449d547cafaa",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b816585c-cb38-43d4-9e2b-04c3f5fdc058",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "vertices": [
                            {
                                "x": 600,
                                "y": 140
                            }
                        ],
                        "z": 50
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "db17a899-4fa7-4e6f-9a96-884be9ef1344",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c8b616f2-14c1-41f3-a386-449d547cafaa",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3e87b7b3-5c38-4722-afc6-699336917e79",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 52
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "046e6ee1-03bb-4cc7-a14f-4d87a68dc317",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3e87b7b3-5c38-4722-afc6-699336917e79",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4d05fb73-7fae-4bd0-8942-febe46384890",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "vertices": [],
                        "z": 88
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3740eec1-b13c-42c4-a078-921e5c1d4a09",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f95e4245-be5f-4265-9155-80c9cfe65678",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "449a7413-39aa-4661-9964-885e66bd8d4d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 125
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ed8a9d2f-a511-4b12-9ffd-6286ca50593c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "449a7413-39aa-4661-9964-885e66bd8d4d",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c8b616f2-14c1-41f3-a386-449d547cafaa",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 128
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            }
                        },
                        "block_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.vaultId\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched_artifacts_1 or matched_results_1:\n        atd_detonate_file(action=action, success=success, container=container, results=results, handle=handle)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "Only proceed with the playbook if the ingested email has an artifact with a vaultId, which will be present if the email has one or more file attachments.",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "449a7413-39aa-4661-9964-885e66bd8d4d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 37,
                        "line_start": 20,
                        "name": "decision",
                        "notes": "Only proceed with the playbook if the ingested email has an artifact with a vaultId, which will be present if the email has one or more file attachments.",
                        "number": 1,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.vaultId",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "decision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 140
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3dbf04d2-9d3d-4640-9389-2988e296119a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3e87b7b3-5c38-4722-afc6-699336917e79",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "97bd1b85-444d-4bb2-ac55-77457e46c473",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 155
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b05cea88-510e-4620-b483-e6a0b5ee1a81",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "97bd1b85-444d-4bb2-ac55-77457e46c473",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "090a5364-8684-4b0c-9b2c-284da5ae099e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 165
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "23ab2d17-a377-4920-a797-3c4e7dcd0253",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3e87b7b3-5c38-4722-afc6-699336917e79",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fea1bc80-685a-4145-bc34-877e65b4b5c6",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 174
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4c38c6fc-765e-4050-96d9-2459616dfc9b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fea1bc80-685a-4145-bc34-877e65b4b5c6",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8b3cd599-e650-4a5b-b6d0-6d2c60f23b92",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 178
                    },
                    {
                        "action": "geolocate ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "filtered-data:filter_1:condition_1:detonate_file_1:action_result.data.*.Summary.Ips.*.Ipv4"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "",
                                "app_version": "",
                                "config_type": "asset",
                                "fields": {
                                    "ip": "filtered-data:filter_1:condition_1:atd_detonate_file:action_result.data.*.Summary.Ips.*.Ipv4"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "maxmind",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.continent_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country_iso_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country_name",
                                        "data_type": "string",
                                        "map_info": "Country"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "numeric",
                                        "map_info": "latitude"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "numeric",
                                        "map_info": "longitude"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "map_info": "IP Address"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "map_info": "name"
                                    },
                                    {
                                        "data_path": "action_result.data.*.city_name",
                                        "data_type": "string",
                                        "map_info": "City"
                                    },
                                    {
                                        "data_path": "action_result.data.*.postal_code",
                                        "data_type": "string",
                                        "map_info": "Postal Code"
                                    },
                                    {
                                        "data_path": "action_result.data.*.as_org",
                                        "data_type": "string",
                                        "map_info": "Organization"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state_iso_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state_name",
                                        "data_type": "string",
                                        "map_info": "State/Province"
                                    },
                                    {
                                        "data_path": "action_result.data.*.time_zone",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "",
                                "product_vendor": "",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "geolocate ip"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def geolocate_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('geolocate_ip() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'geolocate_ip' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_1:condition_1:atd_detonate_file:action_result.data.*.Summary.Ips.*.Ipv4\", \"filtered-data:filter_1:condition_1:atd_detonate_file:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'geolocate_ip' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'ip': filtered_results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(\"geolocate ip\", parameters=parameters, assets=['maxmind'], name=\"geolocate_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "atd detonate file",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "geolocate ip",
                        "delay": 0,
                        "description": "Enrich the container with the geolocation of any IP addresses found in the detonation to inform any further analysis.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4d05fb73-7fae-4bd0-8942-febe46384890",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 63,
                        "line_start": 40,
                        "message": "Configuring now",
                        "name": "geolocate ip",
                        "notes": "Enrich the container with the geolocation of any IP addresses found in the detonation to inform any further analysis.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 760,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "geolocate_ip",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 184
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "42bbfc88-b96f-47f7-90c9-ca61eeffb00b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8b3cd599-e650-4a5b-b6d0-6d2c60f23b92",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "28086fc2-1b6e-4dd0-9870-17f18ed1907d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 188
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4608f7ac-1103-4a19-95bb-f3d6630529eb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8b3cd599-e650-4a5b-b6d0-6d2c60f23b92",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5d65bcdb-8ed8-4e74-a021-6c4ac80097b6",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 192
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            }
                        },
                        "block_code": "def filter_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('filter_1() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"atd_detonate_file:action_result.data.*.Summary.Verdict.Severity\", \">=\", \"3\"],\n        ],\n        name=\"filter_1:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        geolocate_ip(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        opendxl_push_ip(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        mar_lookup_hash(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "atd detonate file",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "Only proceed with investigation if the final severity verdict returned by ATD is greater than or equal to 3, indicating the file is probably malicious.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3e87b7b3-5c38-4722-afc6-699336917e79",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 86,
                        "line_start": 66,
                        "name": "filter",
                        "notes": "Only proceed with investigation if the final severity verdict returned by ATD is greater than or equal to 3, indicating the file is probably malicious.",
                        "number": 1,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">=",
                                        "data_type": "",
                                        "param": "atd_detonate_file:action_result.data.*.Summary.Verdict.Severity",
                                        "value": "3"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "filter_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 194
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9c04df65-e0e8-4539-8ab3-db4b608e3ac8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5d65bcdb-8ed8-4e74-a021-6c4ac80097b6",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c23445bd-e7d0-4c71-bda5-dbd7f44f67d0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 196
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b60a40ce-9564-4121-8250-aaea118bb43b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5d65bcdb-8ed8-4e74-a021-6c4ac80097b6",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "86726c7d-1117-4a28-a20f-6f069d264ddf",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "vertices": [
                            {
                                "x": 1340,
                                "y": 380
                            }
                        ],
                        "z": 199
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9e07e1c1-be68-4063-8c4e-3b1b9e5da4bd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "090a5364-8684-4b0c-9b2c-284da5ae099e",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca5dea79-2cb4-45a2-895d-2747f5110ba1",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 205
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a19c8461-0301-492f-b357-c66187ac214d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "28086fc2-1b6e-4dd0-9870-17f18ed1907d",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca5dea79-2cb4-45a2-895d-2747f5110ba1",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 206
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "63a7e2cb-e7e8-45bb-8082-aaec9092e649",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c23445bd-e7d0-4c71-bda5-dbd7f44f67d0",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca5dea79-2cb4-45a2-895d-2747f5110ba1",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 207
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b719dd8e-8e4b-4006-8097-2d6161e76edc",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "86726c7d-1117-4a28-a20f-6f069d264ddf",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca5dea79-2cb4-45a2-895d-2747f5110ba1",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 208
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            }
                        },
                        "block_code": "def filter_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('filter_2() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"mar_lookup_hash:action_result.data.*.items.*.count\", \">\", 0],\n        ],\n        name=\"filter_2:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        opendxl_push_hash(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        format_1(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "mar lookup hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "Investigate further for any hashes that were identified in the MAR lookup.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8b3cd599-e650-4a5b-b6d0-6d2c60f23b92",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 108,
                        "line_start": 89,
                        "name": "filter",
                        "notes": "Investigate further for any hashes that were identified in the MAR lookup.",
                        "number": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "mar_lookup_hash:action_result.data.*.items.*.count",
                                        "value": "0"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 340
                        },
                        "previous_function": "",
                        "previous_name": "filter_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 211
                    },
                    {
                        "action": "create ticket",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "description": "format_1:formatted_data",
                            "fields": "",
                            "short_description": "phishing attachment present on endpoints",
                            "table": "",
                            "vault_id": "artifact:*.cef.vaultId"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "ServiceNow",
                                "app_version": "1.2.33",
                                "config_type": "asset",
                                "fields": {
                                    "description": "format_1:formatted_data",
                                    "fields": "",
                                    "short_description": "phishing attachment present on endpoints",
                                    "table": "",
                                    "vault_id": "artifact:*.cef.vaultId"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "servicenow",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.short_description",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "servicenow table"
                                        ],
                                        "data_path": "action_result.parameter.table",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.fields",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "servicenow ticket id"
                                        ],
                                        "data_path": "action_result.summary.created_ticket_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.vault_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_updated_on",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_updated_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.escalation",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.watch_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.follow_up",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.made_sla",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.delivery_task",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sla_due",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Number",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.number",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.caller_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.correlation_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_mod_count",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.notify",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resolved_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Closed On",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.closed_at",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.cmdb_ci",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.subcategory",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.category",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.close_notes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expected_start",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.knowledge",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.opened_by.link",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.opened_by.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.impact",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.calendar_stc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.caused_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.comments",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.problem_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.activity_due",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "ID",
                                        "column_order": 4,
                                        "contains": [
                                            "servicenow ticket id"
                                        ],
                                        "data_path": "action_result.data.*.sys_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Opened On",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.opened_at",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.child_incidents",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.work_notes",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Short Description",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.short_description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.comments_and_work_notes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.time_worked",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.upon_reject",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reassignment_count",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.business_stc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.due_date",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_class_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.delivery_plan",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.parent",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.business_duration",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rfc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.company",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.assigned_to",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.approval_history",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user_input",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.work_start",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_domain.link",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_domain.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resolved_at",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.calendar_duration",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.group_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.active",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.approval",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.parent_incident",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_domain_path",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.closed_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Severity",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.upon_approval",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.incident_state",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reopen_count",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contact_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.work_end",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.work_notes_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_created_on",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.correlation_display",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.close_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.assignment_group",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.approval_set",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.order",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.urgency",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Priority",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.priority",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.hold_reason",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.business_service",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.attachment_details.*.file_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.compressed",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.size_bytes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.table_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.image_width",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.content_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.image_height",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.table_sys_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attachment_details.*.download_link",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_mod_count",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_created_on",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_updated_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_updated_on",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.size_compressed",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.average_image_color",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.additional_assignee_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.attachment_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.attachment_added",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "ServiceNow",
                                "product_vendor": "ServiceNow",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "create ticket"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def create_ticket_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('create_ticket_2() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'create_ticket_2' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.vaultId', 'artifact:*.id'])\n    formatted_data_1 = phantom.get_format_data(name='format_1')\n\n    parameters = []\n    \n    # build parameters list for 'create_ticket_2' call\n    for container_item in container_data:\n        parameters.append({\n            'short_description': \"phishing attachment present on endpoints\",\n            'table': \"\",\n            'vault_id': container_item[0],\n            'description': formatted_data_1,\n            'fields': \"\",\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': container_item[1]},\n        })\n\n    phantom.act(\"create ticket\", parameters=parameters, assets=['servicenow'], name=\"create_ticket_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "mar lookup hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Create a new ticket with a summary of the information needed to start remediation.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c23445bd-e7d0-4c71-bda5-dbd7f44f67d0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 169,
                        "line_start": 142,
                        "message": "Configuring now",
                        "name": "create ticket",
                        "notes": "Create a new ticket with a summary of the information needed to start remediation.",
                        "number": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": 340
                        },
                        "previous_function": "",
                        "previous_name": "create_ticket_2",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 219
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "artifact:*.cef.vaultId",
                            "body": "format_1:formatted_data",
                            "from": "phantom@mcafee-ebc.com",
                            "subject": "phishing attachment present on endpoints",
                            "to": "analyst@mcafee-ebc.com"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "SMTP",
                                "app_version": "1.2.29",
                                "config_type": "asset",
                                "fields": {
                                    "attachments": "artifact:*.cef.vaultId",
                                    "body": "format_1:formatted_data",
                                    "from": "phantom@mcafee-ebc.com",
                                    "subject": "phishing attachment present on endpoints",
                                    "to": "analyst@mcafee-ebc.com"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "smtp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "SMTP",
                                "product_vendor": "Generic",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "send email to analyst"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def send_email_to_analyst(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('send_email_to_analyst() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'send_email_to_analyst' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.vaultId', 'artifact:*.id'])\n    formatted_data_1 = phantom.get_format_data(name='format_1')\n\n    parameters = []\n    \n    # build parameters list for 'send_email_to_analyst' call\n    for container_item in container_data:\n        parameters.append({\n            'body': formatted_data_1,\n            'to': \"analyst@mcafee-ebc.com\",\n            'from': \"phantom@mcafee-ebc.com\",\n            'attachments': container_item[0],\n            'subject': \"phishing attachment present on endpoints\",\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': container_item[1]},\n        })\n\n    phantom.act(\"send email\", parameters=parameters, assets=['smtp'], name=\"send_email_to_analyst\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "mar lookup hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "send email to analyst",
                        "delay": 0,
                        "description": "Email an analyst with a summary of the information needed to start remediation.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "86726c7d-1117-4a28-a20f-6f069d264ddf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 199,
                        "line_start": 172,
                        "message": "Configuring now",
                        "name": "send email",
                        "notes": "Email an analyst with a summary of the information needed to start remediation.",
                        "number": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "send_email_to_analyst",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 220
                    },
                    {
                        "action": "detonate file",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "vault_id": "artifact:*.cef.vaultId"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "McAfee Advanced Threat Defense (ATD)",
                                "app_version": "1.0.1",
                                "config_type": "asset",
                                "fields": {
                                    "vault_id": "artifact:*.cef.vaultId"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "atd",
                                "output": [
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Ips.*.Ipv4",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Ips.*.Port",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Ips.*.Risk",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Ips.*.Category",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Ips.*.Severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Ips.*.Processes.*.Name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Ips.*.Processes.*.Sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Ips.*.Processes.*.RelType",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Ips.*.Functional",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Ips.*.Reputation",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Bait",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Data.compiled_with",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Data.analysis_seconds",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Data.sandbox_analysis",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Url",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Port",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Risk",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Category",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Urls.*.Processes.*.Name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Processes.*.Sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Processes.*.RelType",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Functional",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Urls.*.Reputation",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Files.*.Md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Files.*.Name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Files.*.Sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Files.*.Sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Files.*.FileType",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Files.*.Processes.*.Name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Files.*.Processes.*.Sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Files.*.Processes.*.RelType",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Stats.*.ID",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Stats.*.Category",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Stats.*.Severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Process.*.Name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Process.*.Reason",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Process.*.Severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Subject.md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Subject.Name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Subject.Type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Subject.size",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Subject.sha-1",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Subject.sha-256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Subject.FileType",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Subject.Timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Subject.parent_archive",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Verdict.Severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Verdict.Description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Behavior",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.OSversion",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Processes.*.Name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.Summary.Processes.*.Run-Time Dlls.*.DLL Loaded",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.File Operations.*.Other",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.File Operations.*.Files Read",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.File Operations.*.Files Copied",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.File Operations.*.Files Opened",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.File Operations.*.Files Created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.File Operations.*.Files Deleted",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.File Operations.*.Files Modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Other Operations.*.Others",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Process Operations.*.Other",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Process Operations.*.Thread Created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Process Operations.*.Process Created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Registry Operations.*.Registry Read",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Registry Operations.*.Registry Opened",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Registry Operations.*.Registry Created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Registry Operations.*.Registry Modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Network Operations.*.Other",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Processes.*.Process Operations.*.Process killed",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Selectors.*.Engine",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Selectors.*.Severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Selectors.*.MalwareName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.DETversion",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.MISversion",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.comments",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.copyright",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.publisher",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.signature",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.strong_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.file_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.product_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.version_info",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.internal_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Properties.original_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.SUMversion",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Attachments",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.Environment",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.JSONversion",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Summary.URL_Reputation.*.url",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.URL_Reputation.*.port",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.URL_Reputation.*.risk",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.URL_Reputation.*.category",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.URL_Reputation.*.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.URL_Reputation.*.functional",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.URL_Reputation.*.reputation",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.Summary.hasDynamicAnalysis",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Timestamp",
                                        "column_order": 1,
                                        "data_path": "action_result.summary.date",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Filename",
                                        "column_order": 2,
                                        "data_path": "action_result.summary.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "SHA1",
                                        "column_order": 3,
                                        "data_path": "action_result.summary.sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Filesize",
                                        "column_order": 4,
                                        "data_path": "action_result.summary.size",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Filetype",
                                        "column_order": 5,
                                        "data_path": "action_result.summary.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Verdict",
                                        "column_order": 6,
                                        "data_path": "action_result.summary.verdict",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Severity",
                                        "column_order": 7,
                                        "data_path": "action_result.summary.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "vault id",
                                            "pe file"
                                        ],
                                        "data_path": "action_result.parameter.vault_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "ATD",
                                "product_vendor": "McAfee",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "atd detonate file"
                            },
                            ".background": {
                                "stroke": "#E6984E"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def atd_detonate_file(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('atd_detonate_file() called')\n\n    # collect data for 'atd_detonate_file' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.vaultId', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'atd_detonate_file' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'vault_id': container_item[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(\"detonate file\", parameters=parameters, assets=['atd'], callback=atd_detonate_file_callback, name=\"atd_detonate_file\")\n\n    return",
                        "callback_code": "def atd_detonate_file_callback(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('atd_detonate_file_callback() called')\n    \n    send_email_to_admin(action=action, success=success, container=container, results=results, handle=handle)\n    filter_1(action=action, success=success, container=container, results=results, handle=handle)\n\n    return",
                        "callback_start": 223,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "atd detonate file",
                        "delay": 0,
                        "description": "Submit the file(s) to ATD for both static and dynamic analysis. The combined analysis will provide a security verdict about how dangerous the file looks as well as one or more hashes from different stages of its execution and one or more IP addresses hard-coded within it (static analysis) or detected during execution (dynamic analysis).",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c8b616f2-14c1-41f3-a386-449d547cafaa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 231,
                        "line_start": 202,
                        "message": "Configuring now",
                        "name": "detonate file",
                        "notes": "Submit the file(s) to ATD for both static and dynamic analysis. The combined analysis will provide a security verdict about how dangerous the file looks as well as one or more hashes from different stages of its execution and one or more IP addresses hard-coded within it (static analysis) or detected during execution (dynamic analysis).",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 380,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "atd_detonate_file",
                        "required_params": {
                            "vault_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 221
                    },
                    {
                        "action": "post ip",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dxl_ip": "filtered-data:filter_1:condition_1:Detonate_file_in_ATD:action_result.data.*.Summary.Ips.*.Ipv4"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "McAfee OpenDXL",
                                "app_version": "1.1.1",
                                "config_type": "asset",
                                "fields": {
                                    "dxl_ip": "filtered-data:filter_1:condition_1:atd_detonate_file:action_result.data.*.Summary.Ips.*.Ipv4"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "opendxl",
                                "output": [
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Summary",
                                        "column_order": 0,
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.dxl_ip",
                                        "data_type": "string"
                                    }
                                ],
                                "product_name": "OpenDXL",
                                "product_vendor": "McAfee",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "opendxl push ip"
                            },
                            ".background": {
                                "stroke": "#E6984E"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def opendxl_push_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('opendxl_push_ip() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'opendxl_push_ip' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_1:condition_1:atd_detonate_file:action_result.data.*.Summary.Ips.*.Ipv4\", \"filtered-data:filter_1:condition_1:atd_detonate_file:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'opendxl_push_ip' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'dxl_ip': filtered_results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(\"post ip\", parameters=parameters, assets=['opendxl'], callback=ip_reputation_1, name=\"opendxl_push_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#3D9959",
                        "connected_to_start": true,
                        "connection_name": "atd detonate file",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "opendxl push ip",
                        "delay": 0,
                        "description": "Push any IP addresses identified in the ATD detonation to the OpenDXL message fabric. These can be received by any number of other tools listening on OpenDXL.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "97bd1b85-444d-4bb2-ac55-77457e46c473",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 257,
                        "line_start": 234,
                        "message": "Configuring now",
                        "name": "post ip",
                        "notes": "Push any IP addresses identified in the ATD detonation to the OpenDXL message fabric. These can be received by any number of other tools listening on OpenDXL.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 760,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "opendxl_push_ip",
                        "required_params": {
                            "dxl_ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "warn",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 222
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "from": "",
                            "ip": "opendxl_push_ip:action_result.parameter.dxl_ip",
                            "to": ""
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "PassiveTotal",
                                "app_version": "1.2.25",
                                "config_type": "asset",
                                "fields": {
                                    "from": "",
                                    "ip": "opendxl_push_ip:action_result.parameter.dxl_ip",
                                    "ph": "",
                                    "to": ""
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "passivetotal",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.metadata.tld",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.network",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.latitude",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.sinkhole",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.longitude",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.queryType",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.queryValue",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.metadata.primaryDomain",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.classification",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.everCompromised",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.autonomousSystemName",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.metadata.autonomousSystemNumber",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sinkhole",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.classification.classification",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.ever_compromised",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.as_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 3,
                                        "data_path": "action_result.summary.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Sinkholed",
                                        "column_order": 2,
                                        "data_path": "action_result.summary.sinkhole",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.summary.classification",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Ever Compromised",
                                        "column_order": 1,
                                        "data_path": "action_result.summary.ever_compromised",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.unique",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.resolve",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.lastSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.collected",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.firstSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.results.*.recordHash",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.lastSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.firstSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.queryType",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.queryValue",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.passive.totalRecords",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.ssl_certificates.*.sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.ssl_certificates.*.lastSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.ssl_certificates.*.firstSeen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.ssl_certificates.*.ipAddresses",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.last_seen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.first_seen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.total_unique_domains",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "PassiveTotal",
                                "product_vendor": "PassiveTotal",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "ip reputation"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def ip_reputation_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('ip_reputation_1() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'ip_reputation_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['opendxl_push_ip:action_result.parameter.dxl_ip', 'opendxl_push_ip:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'ip_reputation_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'ip': results_item_1[0],\n                'ph': \"\",\n                'from': \"\",\n                'to': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(\"ip reputation\", parameters=parameters, assets=['passivetotal'], name=\"ip_reputation_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "opendxl push ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Enrich the container with the reputation of any IP addresses found in the detonation to inform any further analysis.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "090a5364-8684-4b0c-9b2c-284da5ae099e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 286,
                        "line_start": 260,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "Enrich the container with the reputation of any IP addresses found in the detonation to inform any further analysis.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1140,
                            "y": 60
                        },
                        "previous_function": "",
                        "previous_name": "ip_reputation_1",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 223
                    },
                    {
                        "action": "lookup hash",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "mar_md5": "filtered-data:filter_1:condition_1:atd_detonate_file:action_result.data.*.Summary.Files.*.Md5"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "McAfee OpenDXL",
                                "app_version": "1.1.1",
                                "config_type": "asset",
                                "fields": {
                                    "mar_md5": "filtered-data:filter_1:condition_1:atd_detonate_file:action_result.data.*.Summary.Files.*.Md5"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "opendxl",
                                "output": [
                                    {
                                        "column_name": "ID",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.items.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.items.*.count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "File MD5",
                                        "column_order": 5,
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.items.*.output.Files|md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.items.*.output.Files|status",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Hostname",
                                        "column_order": 2,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.items.*.output.HostInfo|hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP Address",
                                        "column_order": 3,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.items.*.output.HostInfo|ip_address",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Date",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.items.*.created_at",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.startIndex",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.totalItems",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.itemsPerPage",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.currentItemCount",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.mar_md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "OpenDXL",
                                "product_vendor": "McAfee",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "mar lookup hash"
                            },
                            ".background": {
                                "stroke": "#E6984E"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def mar_lookup_hash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('mar_lookup_hash() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'mar_lookup_hash' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_1:condition_1:atd_detonate_file:action_result.data.*.Summary.Files.*.Md5\", \"filtered-data:filter_1:condition_1:atd_detonate_file:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'mar_lookup_hash' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'mar_md5': filtered_results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(\"lookup hash\", parameters=parameters, assets=['opendxl'], callback=filter_2, name=\"mar_lookup_hash\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "atd detonate file",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "mar lookup hash",
                        "delay": 0,
                        "description": "Use OpenDXL to connect to McAfee Active Response, querying for the existence of the detected hashes on any endpoints within the enterprise. MAR searches for the hash on disk, in netflow, or in processes and registry keys.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fea1bc80-685a-4145-bc34-877e65b4b5c6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 312,
                        "line_start": 289,
                        "message": "Configuring now",
                        "name": "lookup hash",
                        "notes": "Use OpenDXL to connect to McAfee Active Response (MAR), querying for the existence of the detected hashes on any endpoints within the enterprise. MAR searches for the hash on disk, in netflow, or in processes and registry keys.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 760,
                            "y": 340
                        },
                        "previous_function": "",
                        "previous_name": "mar_lookup_hash",
                        "required_params": {
                            "mar_md5": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 225
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "",
                            "body": "Detonate_file_in_ATD:action_result.data.*.Summary.Verdict.Description",
                            "from": "phantom@mcafee-ebc.com",
                            "subject": "Detonate_file_in_ATD:action_result.summary.verdict",
                            "to": "admin@mcafee-ebc.com"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "",
                                "app_version": "",
                                "config_type": "asset",
                                "fields": {
                                    "attachments": "",
                                    "body": "atd_detonate_file:action_result.data.*.Summary.Verdict.Description",
                                    "from": "phantom@mcafee-ebc.com",
                                    "subject": "atd_detonate_file:action_result.summary.verdict",
                                    "to": "admin@mcafee-ebc.com"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "smtp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "",
                                "product_vendor": "",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "send email to admin"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def send_email_to_admin(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('send_email_to_admin() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'send_email_to_admin' call\n    results_data_1 = phantom.collect2(container=container, datapath=['atd_detonate_file:action_result.data.*.Summary.Verdict.Description', 'atd_detonate_file:action_result.summary.verdict', 'atd_detonate_file:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'send_email_to_admin' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'body': results_item_1[0],\n                'to': \"admin@mcafee-ebc.com\",\n                'from': \"phantom@mcafee-ebc.com\",\n                'attachments': \"\",\n                'subject': results_item_1[1],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[2]},\n            })\n\n    phantom.act(\"send email\", parameters=parameters, assets=['smtp'], name=\"send_email_to_admin\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "atd detonate file",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "send email to admin",
                        "delay": 0,
                        "description": "Always send the high-level ATD verdict description to the admin to keep them in the loop.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b816585c-cb38-43d4-9e2b-04c3f5fdc058",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 342,
                        "line_start": 315,
                        "message": "Configuring now",
                        "name": "send email",
                        "notes": "Always send the high-level ATD verdict description to the admin to keep them in the loop.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 760,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "send_email_to_admin",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 226
                    },
                    {
                        "action": "post hash",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dxl_rep": "KNOWN_MALICIOUS",
                            "tie_md5": "filtered-data:filter_2:condition_1:mar_lookup_hash:action_result.data.*.items.*.output.Files|md5"
                        },
                        "angle": 0,
                        "app": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "",
                                "active": true,
                                "app_name": "McAfee OpenDXL",
                                "app_version": "1.1.1",
                                "config_type": "asset",
                                "fields": {
                                    "dxl_rep": "KNOWN_MALICIOUS",
                                    "tie_md5": "filtered-data:filter_2:condition_1:mar_lookup_hash:action_result.data.*.items.*.output.Files|md5"
                                },
                                "id": "-",
                                "loaded": false,
                                "missing": false,
                                "name": "opendxl",
                                "output": [
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Summary",
                                        "column_order": 0,
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "dxl reputation"
                                        ],
                                        "data_path": "action_result.parameter.dxl_rep",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.tie_md5",
                                        "data_type": "string"
                                    }
                                ],
                                "product_name": "OpenDXL",
                                "product_vendor": "McAfee",
                                "type": ""
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "opendxl push hash"
                            },
                            ".background": {
                                "stroke": "#E6984E"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "fill": "#FFFFFF",
                                "font-size": 12,
                                "font-weight": 300,
                                "opacity": 0,
                                "ref": ".background",
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def opendxl_push_hash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('opendxl_push_hash() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'opendxl_push_hash' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_2:condition_1:mar_lookup_hash:action_result.data.*.items.*.output.Files|md5\", \"filtered-data:filter_2:condition_1:mar_lookup_hash:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'opendxl_push_hash' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'tie_md5': filtered_results_item_1[0],\n                'dxl_rep': \"KNOWN_MALICIOUS\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(\"post hash\", parameters=parameters, assets=['opendxl'], name=\"opendxl_push_hash\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#3D9959",
                        "connected_to_start": true,
                        "connection_name": "mar lookup hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "opendxl push hash",
                        "delay": 0,
                        "description": "Push out the identified hashes for use by McAfee Threat Intelligence Exchange (TIE). From there the hash can be blocked depending on the reputation threshold configured in TIE policy and whether or not files with that hash are signed by a trusted source.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "28086fc2-1b6e-4dd0-9870-17f18ed1907d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 369,
                        "line_start": 345,
                        "message": "Configuring now",
                        "name": "post hash",
                        "notes": "Push out the identified hashes for use by McAfee Threat Intelligence Exchange (TIE). From there the hash can be blocked depending on the reputation threshold configured in TIE policy and whether or not files with that hash are signed by a trusted source.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1140,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "opendxl_push_hash",
                        "required_params": {
                            "dxl_rep": true,
                            "tie_md5": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "warn",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 227
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(0 0 0)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".format": {
                                "text": "format 1"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port": {
                                "ref-x": 0,
                                "ref-y": 0
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "g.notes image": {
                                "xlink:href": "/inc/coa/img/block_icon_note_on.svg"
                            }
                        },
                        "block_code": "def format_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('format_1() called')\n    \n    template = \"\"\"Phantom received a potential phishing email from {0} with source_id {1}\n\nSince the email contained an attachment, Phantom used McAfee ATD to detonate the file. The detonation returned a severity verdict of {2}\n\nPhantom proceeded to use McAfee Active Response to hunt internally for endpoints associated with any of the hashes identified during ATD detonation. The following internal hostnames were identified:\n\n{3}\n\nPlease continue to investigate these endpoints as soon as possible.\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.fromEmail\",\n        \"container:source_data_identifier\",\n        \"atd_detonate_file:action_result.data.*.Summary.Verdict.Severity\",\n        \"filtered-data:filter_2:condition_1:mar_lookup_hash:action_result.data.*.items.*.output.HostInfo|hostname\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_1\")\n\n    create_ticket_2(container=container)\n    send_email_to_analyst(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "mar lookup hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format 1",
                        "description": "Summarize the key findings from the investigation to populate a new ticket and an email to an analyst.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5d65bcdb-8ed8-4e74-a021-6c4ac80097b6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 139,
                        "line_start": 111,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Summarize the key findings from the investigation to populate a new ticket and an email to an analyst.",
                        "number": 1,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.fromEmail"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "container:source_data_identifier"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "atd_detonate_file:action_result.data.*.Summary.Verdict.Severity"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "filtered-data:filter_2:condition_1:mar_lookup_hash:action_result.data.*.items.*.output.HostInfo|hostname"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1140,
                            "y": 340
                        },
                        "previous_function": "",
                        "previous_name": "format_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "format",
                        "status": "",
                        "template": "Phantom received a potential phishing email from {0} with source_id {1}\n\nSince the email contained an attachment, Phantom used McAfee ATD to detonate the file. The detonation returned a severity verdict of {2}\n\nPhantom proceeded to use McAfee Active Response to hunt internally for endpoints associated with any of the hashes identified during ATD detonation. The following internal hostnames were identified:\n\n{3}\n\nPlease continue to investigate these endpoints as soon as possible.",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 229
                    }
                ]
            },
            "notes": "This playbook uses the following Apps:\n - McAfee Advanced Threat Defense (ATD) (detonate file) [asset name = atd]\n - McAfee OpenDXL (post ip, lookup hash, and post hash) [asset name = opendxl]\n - Maxmind (geolocate ip) [asset name = maxmind]\n - SMTP (send email) [asset name = smtp]\n - Passivetotal (ip reputation) [asset name = passivetotal]\n - Servicenow (create ticket) [asset name = servicenow]\n\nThis playbook is meant to be set as Active, and the IMAP app should be automatically polling the desired email inbox and labelling the resulting containers as \"Email\".\n\nThe destination email addresses used are:\n - admin@mcafee-ebc.com for the results of all ATD file detonations\n - analyst@mcafee-ebc.com for a summary of all successful MAR lookups\n\nThe receiving end of both OpenDXL push actions is not defined here and will depend on your environment. In \"opendxl push hash\" the reputation \"KNOWN_MALICIOUS\" is sent along with the hash, which will have a different behavior depending on your TIE reputation threshold.\n\nThe Format block before \"create ticket\" and \"send email to analyst\" can be modified to share more or less information."
        },
        "schema": 3,
        "version": "3.5.137"
    },
    "create_time": "2018-02-12T22:03:17.777907+00:00",
    "draft_mode": false,
    "labels": [
        "email"
    ]
}
